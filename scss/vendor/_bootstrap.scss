@use '../abstract/' as *;
@use 'sass:map';
@use 'sass:string';
@use 'sass:color';
@use 'sass:meta';
@use 'sass:math';

// 1. Include functions first (manipulate colors, SVGs, calc, etc)
@import '../../node_modules/bootstrap/scss/functions';

// 2. Include any default variable overrides
// Toggle global options
$enable-gradients: true;
$enable-shadows: true;
$enable-negative-margins: true;
// $enable-grid-classes: false;
// $enable-cssgrid: true;

/* Theme colors -- overrides defined bootstrap colors */
/* 
$custom-colors: (
  'primary': $primary,
  'secondary': $secondary,
  'success': $success,
  'info': $info,
  'warning': $warning,
  'danger': $danger,
  'dark': $dark,
  'light': $light,
  ...grays scales
); */

/* Gradient */
/* 
$enable-gradients: true;
$gradient: linear-gradient(to right, rgba($primary, 0.95), rgba($secondary, 0.95));
$custom-gradient: (
  ...$gradient
); */

/* Spacing */
/* 
$enable-negative-margins: true;
$custom-spacer: 1rem;
$custom-spacers: ();
@for $i from 0 through 40 {
  $space: 0.25 * $i;
  $custom-spacers: map-merge(
    $custom-spacers,
    (
      $i: $custom-spacer * $space,
    )
  );
} */

/* Border */
/* 
$custom-border-widths: (
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px,
  8: 8px,
); */

/* Other custom declarations */

/* Tracking */
/* 
$tracking: (
  'tightest': -0.015em,
  'tighter': -0.01em,
  'tight': -0.005em,
  'normal': 0em,
  'wide': 0.01em,
  'wider': 0.03em,
  'widest': 0.05em,
) !default; */

/* Sizing for width, height */
// $custom-sizing: (
//   values: (
//     0: 0px,
//     'px': 1px,
//     '0-5': 0.125rem,
//     /* 2px */ 1: 0.25rem,
//     /* 4px */ '1-5': 0.375rem,
//     /* 6px */ 2: 0.5rem,
//     /* 8px */ '2-5': 0.625rem,
//     /* 10px */ 3: 0.75rem,
//     /* 12px */ '3-5': 0.875rem,
//     /* 14px */ 4: 1rem,
//     /* 16px */ 5: 1.25rem,
//     /* 20px */ 6: 1.5rem,
//     /* 24px */ 7: 1.75rem,
//     /* 28px */ 8: 2rem,
//     /* 32px */ 9: 2.25rem,
//     /* 36px */ 10: 2.5rem,
//     /* 40px */ 11: 2.75rem,
//     /* 44px */ 12: 3rem,
//     /* 48px */ 14: 3.5rem,
//     /* 56px */ 16: 4rem,
//     /* 64px */ 20: 5rem,
//     /* 80px */ 24: 6rem /* 96px */,
//   ),
// );

/* Start override */
// $font-family-base: $ff-sans;
// $theme-colors: $custom-colors;

// 3. Include remainder of required Bootstrap stylesheets
@import '~bootstrap/scss/variables';
@import '~bootstrap/scss/variables-dark';

// 4. Include any default map overrides here

// $spacer: $custom-spacer;
// $spacers: $custom-spacers;

// $border-widths: $custom-border-widths;

// 5. Include remainder of required parts
@import '~bootstrap/scss/maps';
@import '~bootstrap/scss/mixins';
@import '~bootstrap/scss/root';

// 6. Optionally include any other parts as needed
@import '../../node_modules/bootstrap/scss/utilities';
// @import "../../node_modules/bootstrap/scss/reboot";
// @import "../../node_modules/bootstrap/scss/type";
// @import "../../node_modules/bootstrap/scss/images";
// @import "../../node_modules/bootstrap/scss/containers";
// @import "../../node_modules/bootstrap/scss/grid";
// @import "../../node_modules/bootstrap/scss/helpers";

/* Using custom properties to create utilities classes */
$utilities: map-merge(
  $utilities,
  (
    'gradient':
      map-merge(
        map-get($utilities, 'gradient'),
        (
          value: map-merge(map-get(map-get($utilities, 'gradient'), 'values'), ($custom-gradient)),
        )
      ),
    /* Can only override the defined colors of bootstrap */
      /*    
      'color':
      map-merge(
        map-get($utilities, 'color'),
        (
          values: map-merge(map-get(map-get($utilities, 'color'), 'values'), ($custom-colors)),
        )
      ), */
      'line-height':
      map-merge(
        map-get($utilities, 'line-height'),
        (
          values:
            map-merge(
              map-get(map-get($utilities, 'line-height'), 'values'),
              (
                md: $line-height-md,
              )
            ),
        )
      ),
    'letter-spacing': (
      property: letter-spacing,
      class: tracking,
      css-var: true,
      css-variable-name: tracking,
      responsive: true,
      values: $tracking,
    ),
    'cursor': (
      property: cursor,
      class: cursor,
      responsive: true,
      values: auto pointer grab,
    ),
    /* 
    'font-family':
      map-merge(
        map-get($utilities, 'font-family'),
        (
          values:
            map-merge(
              map-get(map-get($utilities, 'font-family'), 'values'),
              (
                body: var(--font-body),
                heading: var(--font-heading),
              )
            ),
        )
      ), */
  )
);

/* Turn on state modifier */
$utilities: map-merge(
  $utilities,
  (
    'color':
      map-merge(
        map-get($utilities, 'color'),
        (
          state: hover,
        )
      ),
    'gradient':
      map-merge(
        map-get($utilities, 'gradient'),
        (
          state: hover,
        )
      ),
    'opacity':
      map-merge(
        map-get($utilities, 'opacity'),
        (
          state: hover,
        )
      ),
    'font-size':
      map-merge(
        map-get($utilities, 'font-size'),
        (
          responsive: true,
        )
      ),
    'width': map.deep-merge(map-get($utilities, 'width'), $custom-sizing),
    'height': map.deep-merge(map-get($utilities, 'height'), $custom-sizing),
  )
);

$utilities: map-merge(
  $utilities,
  (
    'width':
      map-merge(
        map-get($utilities, 'width'),
        (
          responsive: true,
        )
      ),
  )
);

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import '~bootstrap/scss/utilities/api';

// 8. Add additional custom code
// 8. Add additional custom code
:root {
  --font-sans: 'Poppins', sans-serif;
  @each $key, $val in $custom-sizing {
    @each $k, $v in $val {
      --custom-sizing-#{$k}: #{$v};
    }
  }

  @each $key, $val in $custom-colors {
    --#{$key}: #{$val};
  }

  --font-body: 'Open Sans', sans-serif;
  --font-heading: 'Poppins', sans-serif;
}

// Import all of Bootstrap's CSS
@import '~bootstrap/scss/bootstrap';
